#!/usr/bin/env bash

# this is a simple config for herbstluftwm

hc() {
    herbstclient "$@"
}

hc emit_hook reload

# xrandr
#xrandr --dpi 96 --output DVI-I-1 --primary --output DVI-D-0 --left-of DVI-I-1 --output HDMI-0 --right-of DVI-I-1 &
xrandr --dpi 96 --output DVID-I-1 --primary

# Configure monitors
herbstclient detect_monitors
#herbstclient set_monitors 1920x1080+1920+0 1920x1080+0 1920x1080+3840+0
#herbstclient rename_monitor 1 left
#herbstclient rename_monitor 0 middle
#herbstclient rename_monitor 2 right

# remove all existing keybindings
hc keyunbind --all

# keybindings
# if you have a super key you will be much happier with Mod set to Mod4
Mod=Mod1    # Use alt as the main modifier
Super=Mod4   # Use the super key as the main modifier

hc keybind $Mod-Control-Esc quit
hc keybind $Mod-Shift-r reload
#hc keybind $Mod-Shift-q close_and_remove
hc keybind $Mod-Shift-q close_or_remove
hc keybind $Mod-Return spawn urxvt

hc keybind $Mod-p spawn rofi -m -4 -show run -p "oeoeo" -font "xos4Terminus 12"
hc keybind $Mod-Shift-w spawn rofi -m 0 -bw 3 -show window -display-run "Window" -font "xos4Terminus 12"
hc keybind $Mod-Shift-p spawn ~/Scripts/rofi-scripts.sh

# basic movement
# focusing clients
hc keybind $Mod-Left  focus left
hc keybind $Mod-Down  focus down
hc keybind $Mod-Up    focus up
hc keybind $Mod-Right focus right
hc keybind $Mod-h     focus left
hc keybind $Mod-j     focus down
hc keybind $Mod-k     focus up
hc keybind $Mod-l     focus right

# moving clients
hc keybind $Mod-Shift-Left  shift left
hc keybind $Mod-Shift-Down  shift down
hc keybind $Mod-Shift-Up    shift up
hc keybind $Mod-Shift-Right shift right
hc keybind $Mod-Shift-h     shift left
hc keybind $Mod-Shift-j     shift down
hc keybind $Mod-Shift-k     shift up
hc keybind $Mod-Shift-l     shift right

# splitting frames
# create an empty frame at the specified direction
hc keybind $Mod-u       split   bottom  0.5
hc keybind $Mod-o       split   right   0.5
# let the current frame explode into subframes
hc keybind $Mod-Control-space split explode

# resizing frames
resizestep=0.05
hc keybind $Mod-Control-h       resize left +$resizestep
hc keybind $Mod-Control-j       resize down +$resizestep
hc keybind $Mod-Control-k       resize up +$resizestep
hc keybind $Mod-Control-l       resize right +$resizestep
hc keybind $Mod-Control-Left    resize left +$resizestep
hc keybind $Mod-Control-Down    resize down +$resizestep
hc keybind $Mod-Control-Up      resize up +$resizestep
hc keybind $Mod-Control-Right   resize right +$resizestep

# tags
tag_names=( {1..9} )
tag_keys=( {1..9} 0 )

hc rename default "${tag_names[0]}" || true
for i in ${!tag_names[@]} ; do
    hc add "${tag_names[$i]}"
    key="${tag_keys[$i]}"
    if ! [ -z "$key" ] ; then
        hc keybind "$Mod-$key" use_index "$i"
        hc keybind "$Mod-Shift-$key" move_index "$i"
    fi
done

# cycle through tags
hc keybind $Super-period use_index +1 --skip-visible
hc keybind $Super-comma  use_index -1 --skip-visible

# layouting
hc keybind $Mod-r remove
#hc keybind $Mod-s floating toggle
hc keybind $Mod-s spawn ~/.config/herbsluftwm/Scripts/toggle_single_float.sh
hc keybind $Mod-f fullscreen toggle
#hc keybind $Mod-p pseudotile toggle
# The following cycles through the available layouts within a frame, but skips
# layouts, if the layout change wouldn't affect the actual window positions.
# I.e. if there are two windows within a frame, the grid layout is skipped.
hc keybind $Mod-space                                                           \
            or , and . compare tags.focus.curframe_wcount = 2                   \
                     . cycle_layout +1 vertical horizontal max vertical grid    \
               , cycle_layout +1

# mouse
hc mouseunbind --all
hc mousebind $Mod-Button1 move
hc mousebind $Mod-Button2 zoom
hc mousebind $Mod-Button3 resize

# focus
hc keybind $Mod-BackSpace cycle_monitor
#hc keybind $Mod-Tab cycle_all +1
hc keybind $Mod-Tab use_previous
hc keybind $Mod-Shift-Tab cycle_all -1
hc keybind $Mod-c cycle
hc keybind $Mod-Shift-a jumpto urgent

# volume
hc keybind $Mod-plus spawn sh ~/Scripts/volume.sh up
hc keybind $Mod-minus spawn sh ~/Scripts/volume.sh down
hc keybind $Mod-Ctrl-m spawn sh ~/Scripts/volume.sh mute

# suspend
hc keybind $Mod-Ctrl-Pause spawn systemctl suspend

# Scrot
hc keybind Print spawn sh ~/Scripts/scrot.sh

# Toggle floating media player
hc keybind $Mod-Shift-m spawn sh ~/.config/herbstluftwm/Scripts/toggle_floating_media.sh

# Toggle virtual dual monitors
hc keybind $Mod-Shift-n spawn sh ~/.config/herbstluftwm/Scripts/toggle_dual_virtual_monitors.sh

# Rules
hc rule class=Gimp tag=7 index=01 pseudotile=on
hc rule class=Gimp windowrole~'gimp-(image-window|toolbox|dock)' \
    pseudotile=off
hc rule class=Gimp windowrole=gimp-toolbox focus=off index=00
hc rule class=Gimp windowrole=gimp-dock focus=off index=1
hc rule class=Minecraft 1.12.2 tag=4  fullscreen=on

# theme
hc attr theme.tiling.reset 1
hc attr theme.floating.reset 1
hc set frame_border_active_color '#0C1F25'
hc set frame_border_normal_color '#101010'
hc set frame_bg_normal_color '#0D4350'
hc set frame_bg_active_color '#657B83'
hc set frame_border_width 1
hc set always_show_frame 0
hc set frame_bg_transparent 1
hc set frame_transparent_width 3
hc set frame_gap 2

hc attr theme.active.color '#456A73'
hc attr theme.normal.color '#0D4350'
hc attr theme.urgent.color '#B58900'
hc attr theme.inner_width 1
hc attr theme.inner_color '#0C1F25'
hc attr theme.border_width 4
hc attr theme.floating.border_width 4
hc attr theme.floating.outer_width 1
hc attr theme.floating.outer_color black
hc attr theme.active.inner_color '#0C1F25'
hc attr theme.active.outer_color '#0C1F25'
hc attr theme.background_color '#141414'

hc set window_gap 0
hc set frame_padding 0
hc set smart_window_surroundings 0
hc set smart_frame_surroundings 1
hc set mouse_recenter_gap 0

# rules
hc unrule -F
#hc rule class=XTerm tag=3 # move all xterms to tag 3
hc rule focus=on # normally focus new clients
#hc rule focus=off # normally do not focus new clients
# give focus to most common terminals
#hc rule class~'(.*[Rr]xvt.*|.*[Tt]erm|Konsole)' focus=on
hc rule windowtype~'_NET_WM_WINDOW_TYPE_(DIALOG|UTILITY|SPLASH)' pseudotile=on
hc rule windowtype='_NET_WM_WINDOW_TYPE_DIALOG' focus=on
hc rule windowtype~'_NET_WM_WINDOW_TYPE_(NOTIFICATION|DOCK|DESKTOP)' manage=off

# center all other gimp windows on gimp tag
hc rule class=Gimp tag=7 index=01 pseudotile=on
hc rule class=Gimp windowrole~'gimp-(image-window|toolbox|dock)' \
pseudotile=off
hc rule class=Gimp windowrole=gimp-toolbox focus=off index=00
hc rule class=Gimp windowrole=gimp-dock focus=off index=1

# unlock, just to be sure
hc unlock

herbstclient set tree_style '╾│ ├└╼─┐'

# do multi monitor setup here, e.g.:
# hc set_monitors 1280x1024+0+0 1280x1024+1280+0
# or simply:
# hc detect_monitors

# Panel
pkill dzen2
~/.config/herbstluftwm/panel.sh &

# woot
#hc set swap_monitors_to_get_tag 0

#--------------------------------------------------#
# Tags on specic monitors
#--------------------------------------------------#
# Replace the default section for tags in your autostart by the following:
# This is the default tag section of the autostart, with a single change:
# In the use_index keybinding, check the presence of the my_monitor attribute,
# before focusing the desired tag.
hc rename default "${tag_names[0]}" || true
for i in ${!tag_names[@]} ; do
    hc add "${tag_names[$i]}"
    key="${tag_keys[$i]}"
    if ! [ -z "$key" ] ; then
        # first check if the tag is locked to some monitor.
        # if so, first focus the monitor
        hc keybind "$Mod-$key" \
            chain , silent substitute M tags."$i".my_monitor \
                        focus_monitor M \
                  , use_index "$i"
        hc keybind "$Mod-Shift-$key" move_index "$i"
    fi
done

# Add a keybinding for locking the current tag to the monitor it is displayed
# on. This is done by safing the current monitor index in the my_monitor
# attribute of the focused tag. If the monitor has a (nonempty) name, use the
# monitor name instead of its index.
herbstclient keybind $Mod-t chain \
    , new_attr string tags.focus.my_monitor \
    , substitute M monitors.focus.index set_attr tags.focus.my_monitor M \
    , try and \
        . compare monitors.focus.name != "" \
        . substitute M monitors.focus.name \
                set_attr tags.focus.my_monitor M

# Add a keybinding for removing the lock
#herbstclient keybind $Mod-Shift-t \
#    remove_attr tags.focus.my_monitor

# Statically define which tag should be send to which monitor
lock_tag_to_monitor() {
    herbstclient chain \
        , new_attr string tags.by-name."$1".my_monitor \
        , set_attr tags.by-name."$1".my_monitor "$2"
}
# Already lock some of the tags to a monitor, for example:
# lock the second tag to the monitor with index 0
lock_tag_to_monitor 1 0
lock_tag_to_monitor 2 0
lock_tag_to_monitor 3 0
lock_tag_to_monitor 4 0
lock_tag_to_monitor 5 0
lock_tag_to_monitor 6 0
lock_tag_to_monitor 7 0
lock_tag_to_monitor 8 0
lock_tag_to_monitor 9 1
lock_tag_to_monitor media 1
